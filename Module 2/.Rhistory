library(_gridExtra_)
library(gridExtra)
ggplot(data=state_data, mapping=aes(x=Date, y=Positive))+ geom_line()
install.packages(gridExtra)
install.packages("gridExtra")
library(gridExtra)
ggplot(data=state_data, mapping=aes(x=Date, y=Positive))+ geom_histogram(bins=5)
ggplot(data=state_data, mapping=aes(x=Positive))+ geom_histogram(bins=5)
ggplot(data=state_data, mapping=aes(x=Positive))+ geom_histogram(bins=5,color="white",fill="steelblue")
ggplot(data=state_data, mapping=aes(x=Positive))+ geom_histogram(bins=10,color="white",fill="steelblue") #colour gives the border and fill fills in the histogram
ggplot(data = state_data,mapping = aes(x=Positive)) + geom_boxplot()
ggplot(data = manystates_data, mapping = aes(x= factor(State), y=Negative)) +geom_boxplot()
ggplot(data = manystates_data, mapping = aes(x= factor(State), y=Negative)) +geom_boxplot()
manystates_data = filter(covid_data, State == c('Delhi','Karnataka','Tamil Nade','Uttar Pradesh'))
ggplot(data = manystates_data, mapping = aes(x=factor(State), y=Negative)) +geom_boxplot()
manystates_data = filter(covid_data, State == c('Delhi','Karnataka','Tamil Nadu','Uttar Pradesh'))
ggplot(data = manystates_data, mapping = aes(x=factor(State), y=Negative)) +geom_boxplot()
ggplot(data = manystates_data, mapping = aes(x=States, y=Positive)) + geom_col()
ggplot(data = manystates_data, mapping = aes(x=State, y=Positive)) + geom_col()
ggplot(data=manystates_data, mapping=aes(x=Positive))+ geom_histogram(bins=10,color="white",fill="steelblue")+ facet_wrap(State, nrow = 2)
ggplot(data=manystates_data, mapping=aes(x=Negative))+ geom_histogram(bins=10,color="white",fill="steelblue")+ facet_wrap(State, nrow = 2)
ggplot(data=manystates_data, mapping=aes(x=Negative))+ geom_histogram(bins=10,color="white",fill="steelblue")+ facet_wrap(~State, nrow = 2)
plot1 <- ggplot(state_data) + geom_point(mapping = aes(x=Date, y=TotalSamples))
plot2 <- ggplot(state_data) + geom_point(mapping = aes(x=Date, y=Positive))
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 2)
data(mpg)
?mpg
ggplot(mpg, aes(x = displ, y = hwy, color = class)) + geom_point() +
labs(title = "Fuel Efficiency by Engine Power",
subtitle = "Fuel economy data from 1999 and 2008 for 38 popular models of cars",
x = "Engine power (litres displacement)",
y = "Fuel Efficiency (miles per gallon)",
color = "Car Type") + theme_classic()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(year ~ cyl)
head(mpg)
ggplot(mpg, aes(x = displ, y = hwy, color = class)) + geom_point()
theme()
?(theme)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(year ~ cyl)
?(theme)
?(theme())
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
### Faceting
```{r}
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
ggsave('Fuel.png', width = 8, height = 6)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot)
library(ggplot2)
data(sleep)
sample <- data(sleep)
head(sample)
data()
head(data("sleep"))
abc <- (data("sleep"))
head(abc)
(data("sleep"))
(data("sleep"))
data("sleep")
abc <- load("msleep")
abc <- data("msleep")
head(abc)
abc
abc <- load(data("msleep"))
abc <- data("msleep")
abc
msleep
abc <- msleep
abc
var <- msleep
sample
abc <- msleep
abc
filter(abc,bodywt>100)
filter(abc,bodywt>100)
filter(abc, name=="Lion")
#selecting columns
select(abc, name,brainwt,bodywt)
#selecting columns
select(abc, c(name,brainwt,bodywt))
#selection in sequence of columns
select(abc, name:sleep_total)
#adding new col
new_data <- mutate(abc,body_brain_ratio=bodywt/brainwt)
new_data
#adding new col
new_data <- mutate(abc,brain_body_ratio=brainwt/bodywt)'
new_data
new_data
#adding new col
new_data <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data
#adding new col
new_data <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data
#adding new col
new_data <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data
#adding new col
new_data1 <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data1
arrange(new_data1,desc(brain_body_ration))
arrange(new_data1,desc(brain_body_ratio))
write.csv(new_data1,file = "Changedsleep_data.csv")
check <- read.csv("Changedsleep_data.csv")
check
getwd()
check
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(dec(brain_body_ratio))
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Tiger")
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Lion")
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Squirrel")
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Owl")
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Cow")
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Cow")
bca
omit
omitted
#ommiting the na values
omitted <- na.omit(new_data1)
omitted
#ommiting the na values
omitted <- na.omit(new_data1) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_cycle)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt, y=bodywt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_rem)) +geom_point()
#ommiting the na values
omitted <- na.omit(new_data1) %>% arrange(sleep_rem)
omitted
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_line()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_line()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_point()
```{r}
#tried to use multiple fucntions at a single time
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Cow")
#tried to use multiple fucntions at a single time
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Cow")
```{r}
#ommiting the na values
omitted <- na.omit(new_data1) %>% arrange(sleep_total)
omitted
ggplot(data=omitted, mapping = aes(x=total_sleep, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_total, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_total, y=brainwt)) +geom_line()
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_line()
#ommiting the na values
omitted <- na.omit(new_data1) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
filter(abc, name=="Human")
#tried to use multiple fucntions at a single time
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Human")
#tried to use multiple fucntions at a single time
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Human")
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Human")
#ommiting the na values
omitted <- filter(check, c(name,brainwt,bodywt))
#ommiting the na values
omitted <- select(check, c(name,brainwt,bodywt))
omitted
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total))
omitted
omitted <- na.omit(omitted)
omitted
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
#ommiting the na values
omitted <- select(check, c(name,brainwt,bodywt))
omitted <- na.omit(omitted) %>% arrange(bodywt)
omitted
ggplot(data=omitted, mapping = aes(x=bodywt, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=bodywt,y=brainwt)) +geom_line()
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
```{r}
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(order=="Primates")
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(genus=="Homo")
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_jitter(width = 20,height = 20)
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_histogram(bins=5,color="white",fill="steelblue")
ggplot(data=omitted, mapping = aes(x=brainwt)) +geom_histogram(bins=5,color="white",fill="steelblue")
ggplot(data=omitted, mapping = aes(x=brainwt)) +geom_histogram(bins=10,color="white",fill="steelblue")
ggplot(data=omitted, mapping = aes(x=brainwt)) + geom_boxplot()
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total))+geom_col()
ggplot(data=omitted, mapping = aes(x=brainwt, y=bodywt))+geom_col()
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=bodywt))+geom_col()
ggsave('SleepData.png', height = 10, width = 15)
ggplot(data=omitted, mapping = aes(x=brainwt)) + geom_boxplot()
plt1 <- ggplot(omitted)+ geom_line(mapping = aes(x=brainwt, y=sleep_total))
plt2 <- ggplot(omitted)+ geom_line(mapping = aes(x=brainwt, y=bodywt))
library(gridExtra)
grid.arrange(plt1, plt2, ncol = 2)
ggsave('BrainWtvsSleep_and_Brainwtvsbodywt.png', height=10,width = 13)
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt,genus))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt,genus,order,vore))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =order )) +theme_classic()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =order )) +geom_point() +theme_classic()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point() +theme_classic()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point() +theme_dark()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point() +theme_get()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_line() +theme_get()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_line()+labs(title = "Correlation between brain weigth and sleep time",
x= "In Kgs", y="In hours", colour ="Types of Vore" )                                                                           +theme_get()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_line()+labs(title = "Correlation between brain weigth and sleep time",
x= "Weight (In Kgs)", y="Sleep Time(in hours)", colour ="Types of Vore" )                                                                           +theme_get()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point()+labs(title = "Correlation between brain weigth and sleep time",
x= "Weight (In Kgs)", y="Sleep Time(in hours)", colour ="Types of Vore" )                                                                           +theme_get()
```{r}
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(tidyverse)
library(dplyr)
library(tibble)
library(ggplot2)
data("sleep")
abc <- msleep
abc
filter(abc,bodywt>100)
filter(abc, name=="Human")
#selecting columns
select(abc, c(name,brainwt,bodywt))
#selection in sequence of columns
select(abc, name:sleep_total)
#adding new col
new_data1 <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data1
arrange(new_data1,desc(brain_body_ratio))
#saved and loaded new data
write.csv(new_data1,file = "Changedsleep_data.csv")
check <- read.csv("Changedsleep_data.csv")
check
getwd()
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(genus=="Homo")
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt,genus,order,vore))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
#tried correlating brainwrt and total sleep time
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_jitter(width = 20,height = 20)
ggplot(data=omitted, mapping = aes(x=brainwt)) +geom_histogram(bins=10,color="white",fill="")
summary(cars)
plot(pressure)
library(tidyverse)
library(dplyr)
library(tibble)
library(ggplot2)
data("sleep")
abc <- msleep
abc
filter(abc,bodywt>100)
filter(abc, name=="Human")
#selecting columns
select(abc, c(name,brainwt,bodywt))
#selection in sequence of columns
select(abc, name:sleep_total)
#adding new col
new_data1 <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data1
arrange(new_data1,desc(brain_body_ratio))
#saved and loaded new data
write.csv(new_data1,file = "Changedsleep_data.csv")
check <- read.csv("Changedsleep_data.csv")
check
getwd()
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(genus=="Homo")
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt,genus,order,vore))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
#tried correlating brainwrt and total sleep time
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_jitter(width = 20,height = 20)
ggsave('SleepData.png', height = 10, width = 15)
ggplot(data=omitted, mapping = aes(x=brainwt)) + geom_boxplot()
plt1 <- ggplot(omitted)+ geom_line(mapping = aes(x=brainwt, y=sleep_total))
plt2 <- ggplot(omitted)+ geom_line(mapping = aes(x=brainwt, y=bodywt))
library(gridExtra)
grid.arrange(plt1, plt2, ncol = 2)
ggsave('BrainWtvsSleep_and_Brainwtvsbodywt.png', height=10,width = 13)
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point()+labs(title = "Correlation between brain weigth and sleep time",
x= "Weight (In Kgs)", y="Sleep Time(in hours)", colour ="Types of Vore" )                                                                           +theme_get()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(readxl)
library("readxl")
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 3)
getwd()
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 3)
abc
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 2)
abc
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 3)
abc
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 4)
abc
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 5)
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 5)
abc
abc <- na.omit(abc)
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 5)
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 5)
abc <- na.omit(abc)
abc
abc <- read_excel("Mess Bill (Nov 23-Mar 24).xlsx", sheet = 3)
abc <- na.omit(abc)
abc
#Change the path according to your PC
path = "/Users/lenovo1/Desktop/mtech/courses/stats/Datasets/data/"
fileN ="aflsmall.Rdata"
file_path = paste(path,fileN, sep = "")
load(file_path)
#load(file_path)
library(lsr)
#Initial packages
install.packages("lsr")
#Change the path according to your PC
path = "/Users/lenovo1/Desktop/mtech/courses/stats/Datasets/data/"
fileN ="aflsmall.Rdata"
file_path = paste(path,fileN, sep = "")
load(file_path)
library(lsr)
getwd()
#Change the path according to your PC
path = "C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/"
fileN ="aflsmall.Rdata"
file_path = paste(path,fileN, sep = "")
load(file_path)
library(lsr)
who()
#Change the path according to your PC
path = "C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/"
fileN ="aflsmall.Rdata"
file_path = paste(path,fileN, sep = "")
load(file_path)
library(lsr)
who()
load("~/GitHub/BSE658/Module 3/Notebooks/aflsmall.Rdata")
```{r}
print (afl.margins)
hist (afl.margins)
library(psych)
install.packages("psych")
library(psych)
#Try finding skewness of afl.margins here
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
mode(x)
median(x)
sort(x)
median(x)
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
median(x)
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
hist(x)
hist(x, bins=20)
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
hist(x)
max(a)-min(a)
max(x)-min(x)
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
hist(x)
max(x)-min(x)
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
hist(x)
max(x)-min(x) #to check range for a dataset to look for variability
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
max(x)-min(x) #to check range for a dataset to look for variability
afl.median
afl.median
mean(afl.margins)
median(afl.margins)
median(afl.margins)
dataset <- c(-15,2,3,4,5,6,7,8,9,12)
mean(x = dataset, trim = .1)
#Try calculating 5% trimmed mean for above dataset
dataset <- c(-15,2,3,4,5,6,7,8,9,12)
mean(x = dataset, trim = .1) #10% data is trimmed
median(x=dataset, trim=.1)
#Try calculating 5% trimmed mean for above dataset usually done if ther are outliers
#Use the functions quantile
(x = afl.margins, prob = c(0.25,0.75))
#Use the functions quantile
IQR(x = afl.margins, prob = c(0.25,0.75))
#Use the functions quantile
IQR(x = afl.margins, prob = 0.2
#Use the functions quantile
IQR(x = afl.margins, prob = 0.2)
#Use the functions quantile
IQR(afl.margins, prob = 0.2)
#Use the functions quantile
IQR(afl.margins)
var(x)
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
max(x)-min(x) #to check range for a dataset to look for variability
var(x)
deviance(x)
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
max(x)-min(x) #to check range for a dataset to look for variability
var(x)
sqrt(var(x))
x <- c(10,2,5,7,45,23,7,89,98,65)
mean(x)
median(x)
sort(x)
max(x)-min(x) #to check range for a dataset to look for variability
var(x)
sqrt(var(x))
library(psych)
#Try finding skewness of afl.margins here
#Check out what summary() does for afl.margins
summary(afl.margins)
describe(afl.margins)
#Check out what summary() does for afl.margins
summary(afl.margins)
describe(afl.margins)
blowouts <- afl.margins>50
summary(object = blowouts)
blowouts <- afl.margins>50
blowouts
summary(object = blowouts)
load("clinicaltrial.Rdata")
#Check the name of the variable in the environment which contains the dataframe and try summarizing it
head(clin.trial)
summary(clin.trial)
clin.trial
describeBy( x=clin.trial, group=clin.trial$therapy )
describeBy( x=clin.trial, group=clin.trial$therapy )
describe( x=clin.trial, group=clin.trial$therapy )
describe( x=clin.trial, group=clin.trial$therapy )
describeBy( x=clin.trial, group=clin.trial$therapy )
describe(x=clin.trial, group=clin.trial$therapy)
describeBy( x=clin.trial, group=clin.trial$therapy )
by(data=clin.trial, INDICES=clin.trial$therapy, FUN=describe)
#Also try replacing describe in FUN above with summary
by(data=clin.trial, INDICES=clin.trial$therapy, FUN=summary)
aggregate( formula = mood.gain ~ drug + therapy,
data = clin.trial,
FUN = mean)
aggregate( mood.gain ~ drug + therapy,
data = clin.trial,
FUN = mean)
#1 mood.gain by drug/therapy combination
#2 data is in the clin.trial data frame
#3 print out group means
#Try interchanging the positions of drug and therapy above
