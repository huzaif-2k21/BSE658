# Importing covid testing data
covid_testdata <- read.csv('StatewiseTestingDetails.csv')
View(covid_testdata)
# Using head function to view first few rows of the data
head(covid_testdata)
# Using nrow()  and ncol() base R functions to view the number of rows and columns for the data
nrow(covid_testdata)
ncol(covid_testdata)
sum(is.na(covid_testdata$Negative))
# install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
# install.packages("tidyverse")
library(tidyverse)
# converting the data to tibble
covid_data <- as_tibble(covid_testdata)
covid_data
filter(covid_data, Positive > 5000)
covid_data <- read_csv('StatewiseTestingDetails.csv')
covid_data
# library(dplyr)
filter(covid_data, Positive > 5000)
filter(covid_data, State == 'Uttarakhand')
filter(covid_data, State == 'Uttarakhand' & Positive > 5000)
as.numeric(rownames(covid_data))
as.numeric(rownames(covid_testdata))
row_test <- filter(covid_data, Positive > 5000)
as.numeric(rownames(row_test))
filter(covid_data, Positive > 5000)
(covid_data, State == 'Uttarakhand')
# Importing covid testing data
covid_testdata <- read.csv('StatewiseTestingDetails.csv')
# Using head function to view first few rows of the data
head(covid_testdata)
# Using nrow()  and ncol() base R functions to view the number of rows and columns for the data
nrow(covid_testdata)
ncol(covid_testdata)
sum(is.na(covid_testdata$Negative))
# install.packages("tidyverse")
library(tidyverse)
# converting the data to tibble
covid_data <- as_tibble(covid_testdata)
covid_data
covid_data <- read_csv('StatewiseTestingDetails.csv')
covid_data
# library(dplyr)
filter(covid_data, Positive > 5000)
filter(covid_data, State == 'Uttarakhand')
filter(covid_data, State == 'Uttarakhand' & Positive > 5000)
select(covid_data, State, TotalSamples)
select(covid_data, c(State, TotalSamples))
select(covid_data, -Negative)
select(covid_data, State:Positive)
rename(covid_data, Neg = Negative)
covid_data
newdata <- mutate(covid_data, prop = Positive/TotalSamples)
newdata
arrange(covid_data, Date)
arrange(covid_data, desc(Positive))
write.csv(covid_data, file= "covid_data_copy.csv")
covid_data <- read.csv(file= "covid_data_copy.csv")
getwd() #current directory
list.files() # list all files in the directory
covid_data %>%
filter(State == 'Mizoram')
covid_data %>%
filter(State == "Mizoram") %>%
select(Date, Positive)
covid_data %>%
filter(State == "Mizoram") %>%
select(Date, Positive) ->
new_df
covid_data %>%
filter(State == "Mizoram") %>%
select(Date, Positive) ->
new_df
new_df
knitr::opts_chunk$set(echo = TRUE)
# Loading the packages
library(tidyverse)
library(dplyr)
library(tibble)
library(ggplot2)
# Importing covid testing data using tibble read_csv function
covid_data <- read_csv('StatewiseTestingDetails.csv')
covid_data
## this drops the NA values from all rows
covid_data <- na.omit(covid_data)
## this drops the NA values from all rows
covid_data <- na.omit(covid_data)
state_data = filter(covid_data, State=='Delhi')
state_data = arrange(state_data,Date)
state_data
ggplot(state_data, aes(x=Date, y=Positive)) # + geom_point()
ggplot(state_data, aes(x=Date, y=Positive)) # + geom_point()
ggplot(state_data) + geom_text(mapping = aes(x=Date, y=Positive, label = Positive))
ggplot(data=state_data, mapping=aes(x=Date, y=Positive))+ geom_point() # + geom_point()
ggplot(data=state_data) + geom_text(mapping = aes(x=Date, y=Positive, label = Positive))
ggplot(state_data) + geom_text(mapping = aes(x=Date, y=Positive, label = Positive))
ggplot(data=state_data, mapping=aes(x=Date, y=Positive))+ geom_point(alpha=0.2) # + geom_point()
ggsave('Delhi.png', width = 8, height = 6)
plot1 <- ggplot(state_data) + geom_point(mapping = aes(x=Date, y=TotalSamples))
plot2 <- ggplot(state_data) + geom_point(mapping = aes(x=Date, y=Positive))
library(gridExtra)
plot1 <- ggplot(state_data) + geom_point(mapping = aes(x=Date, y=TotalSamples))
plot2 <- ggplot(state_data) + geom_point(mapping = aes(x=Date, y=Positive))
library(gridExtra)
ggplot(data=state_data, mapping=aes(x=Date, y=Positive))+ geom_jitter(width=20, height=20)
library(gridExtra)
library(_gridExtra_)
library(gridExtra)
ggplot(data=state_data, mapping=aes(x=Date, y=Positive))+ geom_line()
install.packages(gridExtra)
install.packages("gridExtra")
library(gridExtra)
ggplot(data=state_data, mapping=aes(x=Date, y=Positive))+ geom_histogram(bins=5)
ggplot(data=state_data, mapping=aes(x=Positive))+ geom_histogram(bins=5)
ggplot(data=state_data, mapping=aes(x=Positive))+ geom_histogram(bins=5,color="white",fill="steelblue")
ggplot(data=state_data, mapping=aes(x=Positive))+ geom_histogram(bins=10,color="white",fill="steelblue") #colour gives the border and fill fills in the histogram
ggplot(data = state_data,mapping = aes(x=Positive)) + geom_boxplot()
ggplot(data = manystates_data, mapping = aes(x= factor(State), y=Negative)) +geom_boxplot()
ggplot(data = manystates_data, mapping = aes(x= factor(State), y=Negative)) +geom_boxplot()
manystates_data = filter(covid_data, State == c('Delhi','Karnataka','Tamil Nade','Uttar Pradesh'))
ggplot(data = manystates_data, mapping = aes(x=factor(State), y=Negative)) +geom_boxplot()
manystates_data = filter(covid_data, State == c('Delhi','Karnataka','Tamil Nadu','Uttar Pradesh'))
ggplot(data = manystates_data, mapping = aes(x=factor(State), y=Negative)) +geom_boxplot()
ggplot(data = manystates_data, mapping = aes(x=States, y=Positive)) + geom_col()
ggplot(data = manystates_data, mapping = aes(x=State, y=Positive)) + geom_col()
ggplot(data=manystates_data, mapping=aes(x=Positive))+ geom_histogram(bins=10,color="white",fill="steelblue")+ facet_wrap(State, nrow = 2)
ggplot(data=manystates_data, mapping=aes(x=Negative))+ geom_histogram(bins=10,color="white",fill="steelblue")+ facet_wrap(State, nrow = 2)
ggplot(data=manystates_data, mapping=aes(x=Negative))+ geom_histogram(bins=10,color="white",fill="steelblue")+ facet_wrap(~State, nrow = 2)
plot1 <- ggplot(state_data) + geom_point(mapping = aes(x=Date, y=TotalSamples))
plot2 <- ggplot(state_data) + geom_point(mapping = aes(x=Date, y=Positive))
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 2)
data(mpg)
?mpg
ggplot(mpg, aes(x = displ, y = hwy, color = class)) + geom_point() +
labs(title = "Fuel Efficiency by Engine Power",
subtitle = "Fuel economy data from 1999 and 2008 for 38 popular models of cars",
x = "Engine power (litres displacement)",
y = "Fuel Efficiency (miles per gallon)",
color = "Car Type") + theme_classic()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(year ~ cyl)
head(mpg)
ggplot(mpg, aes(x = displ, y = hwy, color = class)) + geom_point()
theme()
?(theme)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(year ~ cyl)
?(theme)
?(theme())
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
### Faceting
```{r}
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
ggsave('Fuel Efficiency by Engine Power.png', width = 8, height = 6)
ggsave('Fuel.png', width = 8, height = 6)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot)
library(ggplot2)
data(sleep)
sample <- data(sleep)
head(sample)
data()
head(data("sleep"))
abc <- (data("sleep"))
head(abc)
(data("sleep"))
(data("sleep"))
data("sleep")
abc <- load("msleep")
abc <- data("msleep")
head(abc)
abc
abc <- load(data("msleep"))
abc <- data("msleep")
abc
msleep
abc <- msleep
abc
var <- msleep
sample
abc <- msleep
abc
filter(abc,bodywt>100)
filter(abc,bodywt>100)
filter(abc, name=="Lion")
#selecting columns
select(abc, name,brainwt,bodywt)
#selecting columns
select(abc, c(name,brainwt,bodywt))
#selection in sequence of columns
select(abc, name:sleep_total)
#adding new col
new_data <- mutate(abc,body_brain_ratio=bodywt/brainwt)
new_data
#adding new col
new_data <- mutate(abc,brain_body_ratio=brainwt/bodywt)'
new_data
new_data
#adding new col
new_data <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data
#adding new col
new_data <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data
#adding new col
new_data <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data
#adding new col
new_data1 <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data1
arrange(new_data1,desc(brain_body_ration))
arrange(new_data1,desc(brain_body_ratio))
write.csv(new_data1,file = "Changedsleep_data.csv")
check <- read.csv("Changedsleep_data.csv")
check
getwd()
check
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(dec(brain_body_ratio))
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Tiger")
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Lion")
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Squirrel")
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Owl")
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Cow")
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Cow")
bca
omit
omitted
#ommiting the na values
omitted <- na.omit(new_data1)
omitted
#ommiting the na values
omitted <- na.omit(new_data1) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_cycle)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt, y=bodywt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_rem)) +geom_point()
#ommiting the na values
omitted <- na.omit(new_data1) %>% arrange(sleep_rem)
omitted
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_line()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_line()
ggplot(data=omitted, mapping = aes(x=sleep_rem, y=brainwt)) +geom_point()
```{r}
#tried to use multiple fucntions at a single time
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Cow")
#tried to use multiple fucntions at a single time
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Cow")
```{r}
#ommiting the na values
omitted <- na.omit(new_data1) %>% arrange(sleep_total)
omitted
ggplot(data=omitted, mapping = aes(x=total_sleep, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_total, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=sleep_total, y=brainwt)) +geom_line()
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_line()
#ommiting the na values
omitted <- na.omit(new_data1) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
filter(abc, name=="Human")
#tried to use multiple fucntions at a single time
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Human")
#tried to use multiple fucntions at a single time
bca <- check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Human")
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(name=="Human")
#ommiting the na values
omitted <- filter(check, c(name,brainwt,bodywt))
#ommiting the na values
omitted <- select(check, c(name,brainwt,bodywt))
omitted
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total))
omitted
omitted <- na.omit(omitted)
omitted
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
#ommiting the na values
omitted <- select(check, c(name,brainwt,bodywt))
omitted <- na.omit(omitted) %>% arrange(bodywt)
omitted
ggplot(data=omitted, mapping = aes(x=bodywt, y=brainwt)) +geom_point()
ggplot(data=omitted, mapping = aes(x=bodywt,y=brainwt)) +geom_line()
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
```{r}
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(order=="Primates")
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(genus=="Homo")
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_jitter(width = 20,height = 20)
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_histogram(bins=5,color="white",fill="steelblue")
ggplot(data=omitted, mapping = aes(x=brainwt)) +geom_histogram(bins=5,color="white",fill="steelblue")
ggplot(data=omitted, mapping = aes(x=brainwt)) +geom_histogram(bins=10,color="white",fill="steelblue")
ggplot(data=omitted, mapping = aes(x=brainwt)) + geom_boxplot()
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total))+geom_col()
ggplot(data=omitted, mapping = aes(x=brainwt, y=bodywt))+geom_col()
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=bodywt))+geom_col()
ggsave('SleepData.png', height = 10, width = 15)
ggplot(data=omitted, mapping = aes(x=brainwt)) + geom_boxplot()
plt1 <- ggplot(omitted)+ geom_line(mapping = aes(x=brainwt, y=sleep_total))
plt2 <- ggplot(omitted)+ geom_line(mapping = aes(x=brainwt, y=bodywt))
library(gridExtra)
grid.arrange(plt1, plt2, ncol = 2)
ggsave('BrainWtvsSleep_and_Brainwtvsbodywt.png', height=10,width = 13)
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt,genus))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt,genus,order,vore))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =order )) +theme_classic()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =order )) +geom_point() +theme_classic()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point() +theme_classic()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point() +theme_dark()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point() +theme_get()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_line() +theme_get()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_line()+labs(title = "Correlation between brain weigth and sleep time",
x= "In Kgs", y="In hours", colour ="Types of Vore" )                                                                           +theme_get()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_line()+labs(title = "Correlation between brain weigth and sleep time",
x= "Weight (In Kgs)", y="Sleep Time(in hours)", colour ="Types of Vore" )                                                                           +theme_get()
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point()+labs(title = "Correlation between brain weigth and sleep time",
x= "Weight (In Kgs)", y="Sleep Time(in hours)", colour ="Types of Vore" )                                                                           +theme_get()
```{r}
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(tidyverse)
library(dplyr)
library(tibble)
library(ggplot2)
data("sleep")
abc <- msleep
abc
filter(abc,bodywt>100)
filter(abc, name=="Human")
#selecting columns
select(abc, c(name,brainwt,bodywt))
#selection in sequence of columns
select(abc, name:sleep_total)
#adding new col
new_data1 <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data1
arrange(new_data1,desc(brain_body_ratio))
#saved and loaded new data
write.csv(new_data1,file = "Changedsleep_data.csv")
check <- read.csv("Changedsleep_data.csv")
check
getwd()
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(genus=="Homo")
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt,genus,order,vore))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
#tried correlating brainwrt and total sleep time
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_jitter(width = 20,height = 20)
ggplot(data=omitted, mapping = aes(x=brainwt)) +geom_histogram(bins=10,color="white",fill="")
summary(cars)
plot(pressure)
library(tidyverse)
library(dplyr)
library(tibble)
library(ggplot2)
data("sleep")
abc <- msleep
abc
filter(abc,bodywt>100)
filter(abc, name=="Human")
#selecting columns
select(abc, c(name,brainwt,bodywt))
#selection in sequence of columns
select(abc, name:sleep_total)
#adding new col
new_data1 <- mutate(abc,brain_body_ratio=brainwt/bodywt)
new_data1
arrange(new_data1,desc(brain_body_ratio))
#saved and loaded new data
write.csv(new_data1,file = "Changedsleep_data.csv")
check <- read.csv("Changedsleep_data.csv")
check
getwd()
#tried to use multiple fucntions at a single time
check %>% select(c(name,genus,brain_body_ratio)) %>%arrange(desc(brain_body_ratio))%>%filter(genus=="Homo")
#ommiting the na values
omitted <- select(check, c(name,brainwt,sleep_total,bodywt,genus,order,vore))
omitted <- na.omit(omitted) %>% arrange(brainwt)
omitted
ggplot(data=omitted, mapping = aes(x=brainwt, y=sleep_total)) +geom_point()
#tried correlating brainwrt and total sleep time
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_line()
ggplot(data=omitted, mapping = aes(x=brainwt,y=sleep_total)) +geom_jitter(width = 20,height = 20)
ggsave('SleepData.png', height = 10, width = 15)
ggplot(data=omitted, mapping = aes(x=brainwt)) + geom_boxplot()
plt1 <- ggplot(omitted)+ geom_line(mapping = aes(x=brainwt, y=sleep_total))
plt2 <- ggplot(omitted)+ geom_line(mapping = aes(x=brainwt, y=bodywt))
library(gridExtra)
grid.arrange(plt1, plt2, ncol = 2)
ggsave('BrainWtvsSleep_and_Brainwtvsbodywt.png', height=10,width = 13)
ggplot(omitted, aes(x=brainwt,y=sleep_total,colour =vore )) +geom_point()+labs(title = "Correlation between brain weigth and sleep time",
x= "Weight (In Kgs)", y="Sleep Time(in hours)", colour ="Types of Vore" )                                                                           +theme_get()
