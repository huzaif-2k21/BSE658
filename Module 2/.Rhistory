setwd("C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/")
library(lsr)
library(psych)
library(ggplot2)
library(tidyverse)
#Let's load some data
load( "parenthood.Rdata" )
head(parenthood)
dim(parenthood)
#Try describe() for the above dataframe
describe(parenthood)
#Let's also take a graphical look at the data
hist(parenthood$dan.sleep)
#Try plotting for the other 2 variables
hist(parenthood$dan.grump)
hist(parenthood$baby.sleep)
#Let's also take a graphical look at the data
hist(parenthood$dan.sleep)
#Try plotting for the other 2 variables
hist(parenthood$dan.grump)
hist(parenthood$baby.sleep)
hist(parenthood$day)
install.packages("car")
install.packages("Rcpp")
library(car)
scatterplot( dan.grump ~ dan.sleep, data = parenthood, regLine = FALSE, smooth = FALSE)
scatterplot( dan.grump ~ dan.sleep, data = parenthood, regLine = TRUE, smooth = FALSE)
#Plot a scatter plot for baby.sleep and dan.grump variables
scatterplot(baby.sleep~dan.grump, data=parenthood,regLine=FALSE,smooth=FALSE )
#Plot a scatter plot for baby.sleep and dan.grump variables
scatterplot(baby.sleep~dan.grump, data=parenthood,regLine=TRUE,smooth=FALSE )
#Plot baby sleep and dan sleep here
scatterplot(baby.sleep~dan.sleep, data = parenthood, regLine=FALSE,smooth=FALSE)
#Plot baby sleep and dan sleep here
scatterplot(baby.sleep~dan.sleep, data = parenthood, regLine=TRUE,smooth=FALSE)
\begin{align*}
cor(x = parenthood$dan.sleep, y = parenthood$dan.grump)
#Try giving the entire dataframe 'parenthood' as input in cor()
correlate(parenthood)
load( "anscombesquartet.Rdata" )
cor( X1, Y1 )
cor( X2, Y2 )
cor (X3, Y3)
cor (X4, Y4)
cor( X1, Y1 )
cor( X2, Y2 )
cor (X3, Y3)
cor (X4, Y4)
scatterplot()
scatterplot(X1~Y1,data=anscombe,regLine=False,smooth=FALSE)
scatterplot(x1~y1,data=anscombe,regLine=False,smooth=FALSE)
scatterplot()
scatterplot(x1~y1,data=anscombe,regLine=FALSE,smooth=FALSE)
scatterplot(x1~y1,data=anscombe,regLine=FALSE,smooth=FALSE)
scatterplot(x2~y2,data=anscombe,regLine=FALSE,smooth=FALSE)
scatterplot(x3~y3,data=anscombe,regLine=FALSE,smooth=FALSE)
scatterplot(x4~y4,data=anscombe,regLine=FALSE,smooth=FALSE)
scatterplot(x1~y1,data=anscombe,regLine=FALSE,smooth=TRUE)
scatterplot(x1~y1,data=anscombe,regLine=FALSE,smooth=TRUE)
scatterplot(x2~y2,data=anscombe,regLine=FALSE,smooth=TRUE)
scatterplot(x3~y3,data=anscombe,regLine=FALSE,smooth=TRUE)
scatterplot(x4~y4,data=anscombe,regLine=FALSE,smooth=TRUE)
setwd("C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/")
load( "effort.Rdata" )
effort
cor( effort$hours, effort$grade )
setwd("C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/")
load( "effort.Rdata" )
effort
cor( effort$hours, effort$grade )
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = FALSE)
hours.rank <- rank( effort$hours )   # rank students by hours worked
grade.rank <- rank( effort$grade )   # rank students by grade received
#Now try cor() function for these
cor( hours.rank, grade.rank )
#Execute this and compare with the correlation coefficient we got above
cor( effort$hours, effort$grade, method = "spearman")
load( "parenthood2.Rdata" )
print( parenthood2 )
describe( parenthood2 )
#Check how many missing values are there for each variable - compare the values in 'n' with the number of days.
cor(parenthood2)
cor(parenthood2, use = "complete.obs")
cor(parenthood2, use = "pairwise.complete.obs")
#Try correlate() for parenthood2 here
correlate(parenthood2,corr.method = "pearson")
#Try correlate() for parenthood2 here
correlate(parenthood2,corr.method = "pearson",test = TRUE)
#Try correlate() for parenthood2 here
correlate(parenthood2,corr.method = "pearson",grade.rank)
#Try correlate() for parenthood2 here
correlate(parenthood2,corr.method = "pearson")
#Try correlate() for parenthood2 here
correlate(parenthood2,corr.method = "spearman")
#Try correlate() for parenthood2 here
correlate(parenthood2,corr.method = "pearson")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(lsr)
library(psych)
library(tidyverse)
install.packages("ggcorrplot")
library(ggcorrplot)
library(ggcorrplot)
library(ggplot2)
library(lsr)
library(psych)
library(tidyverse)
install.packages("ggcorrplot")
install.packages("ggcorrplot")
install.packages("ggcorrplot")
library(ggcorrplot)
install.packages("ggcorrplot")
load(mtcars)
data(mtcars)
correlation <- cor(mtcars)
correlation
correlation <- data.frame(correlation)
correlation
data.frame(correlation)
ggcorrplot(correlation)
data("SLID")
correlation <- cor(SLID)
SLID
temp <- filter(temp, ==(na.omit(temp))
temp <- filter(temp, !=(na.omit(temp))
temp <- filter(temp, !(is.na(temp))
temp
temp
temp2 <- filter(temp, !(is.na(temp))
temp2
temp2 <- temp %>% drop_na()
data("SLID")
temp <- SLID
temp2 <- temp %>% drop_na()
temp2
data("SLID")
temp <- SLID
temp <- temp %>% drop_na()
temp
tempcorrelation <- cor(temp2)
tempcorrelation <- cor(temp)
temp
setwd("C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/")
load("USGasG.csv")
filed <- read.csv("USGasG.csv",sep = ",",header = TRUE)
filed
filed <- filed %>% drop_na()
temp
filed
remove(temp)
tempcorrelation <- cor(temp)
correlation <- cor(filed)
data.frame(correlation)
ggcorrplot(correlation)
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
lab = TRUE)
setwd("C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/")
filed <- read.csv("urine.csv",sep = ",",header = TRUE)
filed
filed <- filed %>% drop_na()
filed
remove(temp)
correlation <- cor(filed)
data.frame(correlation)
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
lab = TRUE)
filed
setwd("C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/")
filed <- read.csv("urine.csv",sep = ",",header = TRUE)
filed
filed <- filed %>% drop_na()
filed <- subset(filed, select = c(r,gravity,ph,osmo,cond,urea,calc))
filed
correlation <- cor(filed)
filed
correlation <- cor(filed)
data.frame(correlation)
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
lab = TRUE)
filed
ggcorrplot(correlation)
# method = "circle"
ggcorrplot(correlation, method = "circle")
# Reordering the correlation matrix
# --------------------------------
# using hierarchical clustering
ggcorrplot(correlation, hc.order = TRUE, outline.col = "white")
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(correlation, hc.order = TRUE, type = "upper",
outline.col = "white")
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
lab = TRUE)
ggcorrplot(correlation, hc.order = TRUE,
type = "lower", p.mat = p.mat)
ggcorrplot(correlation, hc.order = TRUE,
type = "lower", p.mat =insig)
ggcorrplot(correlation, p.mat = p.mat, hc.order = TRUE,
type = "lower", insig = "blank")
p.mat <- cor_pmat(correlation)
setwd("C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/")
filed <- read.csv("urine.csv",sep = ",",header = TRUE)
filed
filed <- filed %>% drop_na()
filed <- subset(filed, select = c(r,gravity,ph,osmo,cond,urea,calc))
filed
correlation <- cor(filed)
data.frame(correlation)
p.mat <- cor_pmat(correlation)
ggcorrplot(correlation, p.mat = p.mat, hc.order = TRUE,
type = "lower", insig = "blank")
library(ggplot2)
library(lsr)
library(psych)
library(tidyverse)
install.packages("ggcorrplot")
library(ggcorrplot)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(ggplot2)
library(lsr)
library(psych)
library(tidyverse)
install.packages("ggcorrplot")
library(ggcorrplot)
setwd("C:/Users/hp/Documents/GitHub/BSE658/Module 3/Notebooks/")
filed <- read.csv("urine.csv",sep = ",",header = TRUE)
filed
filed <- filed %>% drop_na()
filed <- subset(filed, select = c(r,gravity,ph,osmo,cond,urea,calc))
filed
correlation <- cor(filed)
data.frame(correlation)
p.mat <- cor_pmat(correlation)
ggcorrplot(correlation)
# method = "circle"
ggcorrplot(correlation, method = "circle")
# Reordering the correlation matrix
# --------------------------------
# using hierarchical clustering
ggcorrplot(correlation, hc.order = TRUE, outline.col = "white")
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(correlation, hc.order = TRUE, type = "upper",
outline.col = "white")
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(correlation, hc.order = TRUE, type = "lower",
lab = TRUE)
ggcorrplot(correlation, p.mat = p.mat, hc.order = TRUE,
type = "lower", insig = "blank")
knitr::opts_chunk$set(echo = TRUE)
covid_data
#Let's sample 100 IQ scores randomly from a population (assuming it has mean of 100, and sd of 15)
IQ <- rnorm(n = 100, mean = 100, sd = 15) # sample IQ scores (generate using rnorm)
IQ <- round(IQ) # IQs are whole numbers!
print(IQ)
#Let's also plot and see how it looks like
hist(IQ)
#Find the mean of this sample
mean(IQ)
sd(IQ)
#Let's sample IQ from 10, 000 people
IQ <- rnorm(n = 10000, mean = 100, sd = 15) # sample IQ scores (generate using rnorm)
IQ <- round(IQ) # IQs are whole numbers!
#Finding the mean and sd of this sample
mean(IQ)
sd(IQ)
#Let's also plot a histogram
hist(IQ)
IQ.1 <- round(rnorm(n=5, mean = 100, sd = 15))
IQ.1
# Finding the mean and sd of this sample
mean(IQ.1)
sd(IQ.1)
pants <- data.frame(
type = c("Blue jeans","Grey jeans","Black jeans","Black suit","Blue tracksuit"),
label = c("X1", "X2", "X3", "X4", "X5"),
probability = c(0.5,0.3,0.1,0,0.1))
pants
dbinom( n = 4, size = 20, prob = 1/6 )
dbnom( n = 4, size = 20, prob = 1/6 )
dbinom( n = 4, size = 20, prob = 1/6 )
install.packages("binom")
library(binom)
dbinom( n = 4, size = 20, prob = 1/6 )
pb <- dbinom( n = 4, size = 20, prob = 1/6 )
pb <- dbinom( n = 1000, size = 20, prob = 1/6 )
pb <- dbinom( size = 20, prob = 1/6 )
pb <- dbinom( x=40, size = 20, prob = 1/6 )
pb <- dbinom( x=40, size = 20, prob = 1/6 )
pb
pb <- dbinom( p=0.75, size = 20, prob = 1/6 )
pb <- dbinom(n=40, size = 20, prob = 1/6 )
pb <- dbinom(x=4, size = 20, prob = 1/6 )
pb
#Find the probability of rolling 0 skulls or 1 skull or 2 skulls or 3 skulls or 4 skulls
pbinom( q= 4, size = 20, prob = 1/6)
#Practice - Find probability of getting 0-5 heads in 50 trials of coin flip
qbinom( p = 0.75, size = 20, prob = 1/6 )
#Practice - Find the 40th percentile
z <- rbinom( n = 100, size = 20, prob = 1/6 )
z
#Let's also plot this and see how it looks
hist(z, col = 'steelblue')
x <- rnorm(100)
hist(x, col = 'steelblue')
abline(v = mean(x), lty = 2, lwd = 2)
par(mfrow = c(1, 2)) #Create a 1 x 2 plotting matrix
# The next 2 plots created will be plotted next to each other in one row
# Grid of X-axis values
x <- seq(-4, 8, 0.1)
#-----------------------------------------
# Same standard deviation, different mean
#-----------------------------------------
# Mean 0, sd 1
plot(x, dnorm(x, mean = 0, sd = 1), type = "l",
ylim = c(0, 0.6), ylab = "", lwd = 2, col = "red")
# Mean 3, sd 1
lines(x, dnorm(x, mean = 3, sd = 1), col = "blue", lty = 1, lwd = 2)
# Adding a legend
legend("topright", legend = c("0 1", "3 1"), col = c("red", "blue"),
title = expression(paste(mu, " ", sigma)),
title.adj = 0.9, lty = 1, lwd = 2, box.lty = 0)
#-----------------------------------------
# Same mean, different standard deviation
#-----------------------------------------
# Mean 1, sd 1
plot(x, dnorm(x, mean = 1, sd = 1), type = "l",
ylim = c(0, 1), ylab = "", lwd = 2, col = "red")
# Mean 1, sd 0.5
lines(x, dnorm(x, mean = 1, sd = 0.5), col = "blue", lty = 1, lwd = 2)
# Adding a legend
legend("topright", legend = c("1 1", "1 0.5"), col = c("red", "blue"),
title = expression(paste(mu, " ", sigma)),
title.adj = 0.75, lty = 1, lwd = 2, box.lty = 0)
par(mfrow = c(1, 1))
y <- rpois(100, lambda = 1.2)
hist(y, col = 'steelblue')
abline(v = mean(y), lty = 2, lwd = 2)
x_dgamma <- seq(0, 2, by = 0.04)
y_dgamma <- dgamma(x_dgamma, shape = 6)
plot(y_dgamma)
z <- rnorm(50, mean = 5, sd = 2)
mean(z)
sd(z)
quantile(z)
quantile(z, 0.16)
mean(x) - sd(x)
mean(x) + sd(x)
CompanyABCProfit<-read.csv("CompanyABCProfit.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
load(diamonds)
abc <- load(diamonds)
abc <- load("diamonds")
abc <- load(diamonds)
diamonds
var <- diamonds
var
head(diamonds)
select(diamonds, c(cut,price)) %>% filter(price>9500) %>%filter(price<10000)
var
var <- select(diamonds, c(cut,price)) %>% filter(price>9500) %>%filter(price<10000)
var
#converting the price with current usd to inr value
var <- select(diamonds, c(cut,price)) %>% filter(price>9500) %>%filter(price<10000) %>% mutate(inr=price*83.95)
var
#converting the price with usd to inr value at 85
var <- select(diamonds, c(cut,price)) %>% filter(price>9500) %>%filter(price<10000) %>% mutate(inr=price*85)
var
#converting the price with usd to inr value at 85
var <- select(diamonds, c(cut,price, carat)) %>% filter(price>9500) %>%filter(price<10000) %>% mutate(inr=price*85)
#converting the price with usd to inr value at 85
var <- select(diamonds, c(cut,price, carat)) %>% filter(price>9500) %>%filter(price<10000) %>% mutate(inr=price*85)
var
ggplot(data = var,aes(x=inr,y=carat, colour = cut))+ geom_point()
ggplot(data = var,aes(x=inr,y=carat, colour = cut))+ geom_histogram()
ggplot(data = var,aes(x=inr,y=carat, colour = cut))+ geom_boxplot()
#loaded the dataset
data("diamonds")
head(diamonds)
ggplot(data = var,aes(x=inr,y=carat))+ geom_point()+facet_wrap(~cut)
ggplot(data = var,aes(x=inr,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_classic()
ggplot(data = var,aes(x=inr,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_minimal()
#converting the price with usd to inr value at 85
var <- select(diamonds, c(price, carat)) %>% filter(price>9500) %>%filter(price<10000) %>% mutate(inr=price*85)
var
ggplot(data = var,aes(x=inr,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_minimal()
#converting the price with usd to inr value at 85
var <- select(diamonds, c(cut,price)) %>% filter(price>9500) %>%filter(price<10000) %>% mutate(inr=price*85)
var
ggplot(data = var,aes(x=inr,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_minimal()
ggplot(diamonds,aes(x=price,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_minimal()
ggplot(var,aes(x=price,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_minimal()
#converting the price with usd to inr value at 85
var <- select(diamonds, c(cut,price, carat)) %>% filter(price>9500) %>%filter(price<10000) %>% mutate(inr=price*85)
ggplot(var,aes(x=price,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_minimal()
ggplot(var,aes(x=price,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_grey()
ggplot(diamonds,aes(x=price,y=carat))+ geom_point()+facet_wrap(~cut)+ theme_grey()
#converting the price with usd to inr value at 85
var <- select(diamonds, c(cut,price)) %>% filter(price>9500) %>%filter(price<10000) %>% mutate(inr=price*85)
var
pants <- data.frame(
type = c("Blue jeans","Grey jeans","Black jeans","Black suit","Blue tracksuit"),
label = c("X1", "X2", "X3", "X4", "X5"),
probability = c(0.5,0.3,0.1,0,0.1))
pants
#Try plotting a bar graph of all the probabilities above
pb <- dbinom(x=4, size = 20, prob = 1/6 )
pb
#Try finding the probability for N = 20 and N=100 trials for a fair coin flip.
#Find the probability of rolling 0 skulls or 1 skull or 2 skulls or 3 skulls or 4 skulls
pbinom( q= 4, size = 20, prob = 1/6)
#Practice - Find probability of getting 0-5 heads in 50 trials of coin flip
qbinom( p = 0.75, size = 20, prob = 1/6 )
#Practice - Find the 40th percentile
z <- rbinom( n = 100, size = 20, prob = 1/6 )
z
#Let's also plot this and see how it looks
hist(z, col = 'steelblue')
library(binom)
knitr::opts_chunk$set(echo = TRUE)
rnorm(0, 1,100)
ab
rbinorm(0, 1,100)
rnorm(10, 75,10)
abc <- rnorm(10, 75,10)
mean(abc)
sd(abc)
rnorm(10000,75,10)
bc <- rnorm(10000,75,10)
bc <- rnorm(10000,75,10)
mean(bc)
sd(bc)
abc <- rnorm(10, 75,10)
mean(abc)
sd(abc)
cd <- rt(1000,5)
hist(cd)
hist(rnorm(1000,0,1))
cd <- rt(1000,5)
hist(cd)
hist(rnorm(10000,0,1))
cd <- rt(10000,5)
hist(cd)
hist(rnorm(10000,0,1))
cd <- rt(10000,5, bins=10)
hist(rnorm(10000,0,1))
cd <- rt(10000,5)
hist(cd, bins=10)
hist(rnorm(10000,0,1))
cd <- rt(10000,5)
t_dist <- hist(cd, bins=10)
plot(t_dist,cd, type="1",col="blue",lwd=3)
hist(rnorm(10000,0,1))
cd <- rt(10000,5)
t_dist <- hist(cd)
plot(t_dist,t_dist$density, type="1",col="blue",lwd=3)
hist(rnorm(10000,0,1))
cd <- rt(10000,5)
t_dist <- hist(cd)
plot(t_dist$mids,t_dist$density, type="1",col="blue",lwd=3)
hist(rnorm(10000,0,1))
cd <- rt(10000,5)
t_dist <- hist(cd)
plot(t_dist$mids,t_dist$density, type="l",col="blue",lwd=3)
hist(rnorm(10000,0,1))
cd <- rt(10000,5)
t_dist <- hist(cd)
hist(cd, bins=20)
plot(t_dist$mids,t_dist$density, type="l",col="blue",lwd=3)
hist(rnorm(10000,0,1))
cd <- rt(10000,5)
t_dist <- hist(cd)
hist(cd, bins=6)
plot(t_dist$mids,t_dist$density, type="l",col="blue",lwd=3)
norm <- hist(rnorm(10000,0,1))
cd <- rt(10000,5)
t_dist <- hist(cd)
hist(cd, bins=6)
plot(norm$mids,norm$density, type="l",col="blue",lwd=3)
plot(t_dist$mids,t_dist$density, type="l",col="blue",lwd=3)
norm <- hist(rnorm(10000,0,1))
cd <- rt(10000,10)
t_dist <- hist(cd)
hist(cd, bins=6)
plot(norm$mids,norm$density, type="l",col="blue",lwd=3)
plot(t_dist$mids,t_dist$density, type="l",col="blue",lwd=3)
norm <- hist(rnorm(10000,0,1))
cd <- rt(10000,100)
t_dist <- hist(cd)
hist(cd, bins=6)
plot(norm$mids,norm$density, type="l",col="blue",lwd=3)
plot(t_dist$mids,t_dist$density, type="l",col="blue",lwd=3)
norm <- hist(rnorm(10000,0,1))
cd <- rt(10000,10)
t_dist <- hist(cd)
hist(cd, bins=6)
plot(norm$mids,norm$density, type="l",col="blue",lwd=3)
plot(t_dist$mids,t_dist$density, type="l",col="blue",lwd=3)
CompanyABCProfit<-read.csv("CompanyABCProfit.csv")
