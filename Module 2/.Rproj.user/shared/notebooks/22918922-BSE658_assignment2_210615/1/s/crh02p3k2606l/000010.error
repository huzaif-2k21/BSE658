{"frames":[{"func":"(function (x, ...) \nUseMethod(\"print\"))(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"print.ggplot(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot_gtable(data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggplot_gtable.ggplot_built(data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"by_layer(function(l, d) l$draw_geom(d, layout), plot$layers, \n    data, \"converting geom to grob\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try_fetch(for (i in seq_along(data)) {\n    out[[i]] <- f(l = layers[[i]], d = data[[i]])\n}, error = function(cnd) {\n    cli::cli_abort(c(\"Problem while {step}.\", i = \"Error occurred in the {ordinal(i)} layer.\"),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(withCallingHandlers(expr, condition = function(cnd) {\n    {\n        .__handler_frame__. <- TRUE\n        .__setup_frame__. <- frame ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, condition = function(cnd) {\n    {\n        .__handler_frame__. <- TRUE\n        .__setup_frame__. <- frame ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"f(l = layers[[i]], d = data[[i]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"l$draw_geom(d, layout)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"draw_geom(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"self$geom$draw_layer(data, self$computed_geom_params, layout, \n    layout$coord)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"draw_layer(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(data_panels, function(data) {\n    if (empty(data)) \n        return(zeroGrob())\n    panel_params <- layout$panel_params[[data$PANEL[1]]] ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"inject(self$draw_panel(data, panel_params, coord, !!!params))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"self$draw_panel(data, panel_params, coord, flipped_aes = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"draw_panel(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggproto_parent(GeomRect, self)$draw_panel(data, panel_params, \n    coord, lineend = lineend, linejoin = linejoin)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"draw_panel(..., self = self)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"ggname(\"geom_rect\", rectGrob(coords$xmin, coords$ymax, width = coords$xmax - \n    coords$xmin, height = coords$ymax - coords$ymin, default.units = \"native\", \n    just = c(\"left\", \"top\"), gp = gpar(col = coords$colour, fill = fill_alpha(coords$fill, \n        coords$alpha), lwd = coords$linewidth * .pt, lty = coords$linetype,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"grobName(grob, prefix)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rectGrob(coords$xmin, coords$ymax, width = coords$xmax - coords$xmin, \n    height = coords$ymax - coords$ymin, default.units = \"native\", \n    just = c(\"left\", \"top\"), gp = gpar(col = coords$colour, fill = fill_alpha(coords$fill, \n        coords$alpha), lwd = coords$linewidth * .pt, lty = coords$linetype,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"grob(x = x, y = y, width = width, height = height, just = just, \n    hjust = hjust, vjust = vjust, name = name, gp = gp, vp = vp, \n    cl = \"rect\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"gpar(col = coords$colour, fill = fill_alpha(coords$fill, coords$alpha), \n    lwd = coords$linewidth * .pt, lty = coords$linetype, linejoin = linejoin, \n    lineend = lineend)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"validGP(list(...))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"numnotnull(\"fontsize\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fill_alpha(coords$fill, coords$alpha)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"alpha(fill, alpha)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"farver::decode_colour(colour, alpha = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"decode_c(colour, alpha, colourspace_match(to), white, na_value)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    {\n        .__handler_frame__. <- TRUE ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"handlers[[1L]](cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cli::cli_abort(c(\"Problem while {step}.\", i = \"Error occurred in the {ordinal(i)} layer.\"), \n    call = layers[[i]]$constructor, parent = cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang::abort(message, ..., call = call, use_cli_format = TRUE, \n    .frame = .frame)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in geom_histogram(bins = 10, color = \"white\", fill = \"\") : \n  \u001B[38;5;255m\n\u001B[36mâ„¹\u001B[38;5;255m Error occurred in the 1st layer.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m Unknown colour name: \n"}