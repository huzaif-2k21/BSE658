---
title: "linearMixedModels"
output: html_document
date: "2024-11-08"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.

---
title: "R Notebook"
output: html_notebook
---

Linear Mixed Models

```{r}
library(magrittr)
library(tidyverse)
library(ggplot2)
```

For linear mixed models, load these libraries
```{r}
library(lme4)
library(lmerTest)
```

A great visualization for mixed models:
http://mfviz.com/hierarchical-models/



```{r}
data("sleepstudy")
head(sleepstudy)
```

Plotting subjectwise data

```{r}
sleep2 <- sleepstudy %>%
  filter(Days >= 2) %>%
  mutate(days_deprived = Days - 2)
ggplot(sleep2, aes(x = days_deprived, 
                   y = Reaction)) +
  geom_point() +
  scale_x_continuous(breaks = 0:7) +
  facet_wrap(~Subject) +
  labs(y = "Reaction Time", 
       x = "Days deprived of sleep (0 = baseline)")
```


Complete Pooling model


```{r}
cp_model <- lm(Reaction ~ days_deprived, sleep2)
summary(cp_model)
ggplot(sleep2, aes(x = days_deprived, y = Reaction)) +
  geom_abline(intercept = coef(cp_model)[1],
              slope = coef(cp_model)[2],
              color = '#f4cae2', size = 1.5) +
  geom_point() +
  scale_x_continuous(breaks = 0:7) +
  facet_wrap(~Subject, nrow = 3) +
  labs(y = "Reaction Time", 
       x = "Days deprived of sleep (0 = baseline)")
```

No Pooling Model

```{r}
sleep2 %>% pull(Subject) %>% is.factor()
np_model <- lm(Reaction ~ days_deprived + Subject + days_deprived:Subject,
               data = sleep2)
  summary(np_model)
all_intercepts <- c(coef(np_model)["(Intercept)"],
                    coef(np_model)[3:19] + coef(np_model)["(Intercept)"])
all_slopes  <- c(coef(np_model)["days_deprived"],
                 coef(np_model)[20:36] + coef(np_model)["days_deprived"])
ids <- sleep2 %>% pull(Subject) %>% levels() %>% factor()
np_coef <- tibble(Subject = ids,
                  intercept = all_intercepts,
                  slope = all_slopes)
np_coef
```

```{r}
ggplot(sleep2, aes(x = days_deprived, y = Reaction)) +
  geom_abline(data = np_coef,
              mapping = aes(intercept = intercept,
                            slope = slope),
              color = '#f4cae2', size = 1.5) +
  geom_point() + theme_bw() +
  scale_x_continuous(breaks = 0:7) +
  facet_wrap(~Subject, nrow=3) +
  labs(y = "Reaction Time", 
       x = "Days deprived of sleep (0 = baseline)")
```

Partial Pooling Model

```{r}
pp_mod <- lmer(Reaction ~ days_deprived + (days_deprived | Subject), sleep2)
summary(pp_mod)
newdata <- crossing(
  Subject = sleep2 %>% pull(Subject) %>% levels() %>% factor(),
  days_deprived = 0:7)
newdata2 <- newdata %>%
  mutate(Reaction = predict(pp_mod, newdata))
newdata2
```


```{r}
ggplot(sleep2, aes(x = days_deprived, y = Reaction)) +
  geom_line(data = newdata2,
            color = '#f4cae2', size = 1.5) +
  geom_point() + theme_bw() +
  scale_x_continuous(breaks = 0:7) +
  facet_wrap(~Subject, nrow = 3) +
  labs(y = "Reaction Time", 
       x = "Days deprived of sleep (0 = baseline)")
```

##Research Question

Experimenting with Linear Mixed Models

Reading: https://bodowinter.com/tutorial/bw_LME_tutorial2.pdf
PPT tutorial: https://chenzixu.rbind.io/slides/lme/lmer.html

In this example: 
We're interested in the relationship between pitch and politeness (Winter & Grawunder, 2012).

Politeness: formal/polite and informal register (categorical factor)
multiple measures per subject (inter-dependent!)

```{r}
data = read.csv("http://www.bodowinter.com/tutorial/politeness_data.csv")
head(data)
```

Convert attitude, gender, subject into factors.
```{r}
data = data %>% mutate(attitude=as.factor(attitude), gender=as.factor(gender), subject=as.factor(subject))
```


```{r}
boxplot(frequency ~ attitude*gender,
col=c("white","lightgray"),data)
```



```{r}
politeness.model0 = lmer(frequency ~ 1 + (1|subject) + (1|scenario), data=data)
summary(politeness.model0)

```




Random Intercept Models with Attitude as fixed effect

```{r}
politeness.model1 = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=data)
summary(politeness.model1)
```

```{r}
politeness.model2 = lmer(frequency ~ attitude + gender + (1|subject) + (1|scenario), data=data)
summary(politeness.model2)
```
```{r}
AIC(politeness.model0, politeness.model1, politeness.model2)
```





Likelihood Ratio Test

```{r}
politeness.null = lmer(frequency ~ 1 + (1|subject) + (1|scenario), data=data, REML=FALSE)
politeness.partial = lmer(frequency ~ attitude + (1|subject) + (1|scenario), data=data, REML=FALSE)
politeness.full = lmer(frequency ~ attitude + gender + (1|subject) + (1|scenario), data=data, REML=FALSE)
anova(politeness.null, politeness.partial, politeness.full)
```

Random Slope Model

```{r}
politeness.model3 = lmer(frequency~attitude + gender + (1|subject) + (1+attitude|scenario), data = data, REML=FALSE)
summary(politeness.model3)
```
```{r}
anova(politeness.null, politeness.partial, politeness.full, politeness.model3)

```
```{r}
AIC(politeness.null, politeness.partial, politeness.full, politeness.model3)

```

Testing Assumptions: 


```{r}
library(easystats)
```

```{r}
check_normality(politeness.full)
```
```{r}
check_heteroscedasticity(politeness.full)
```

```{r}
check_collinearity(politeness.full)
```


#Use this in exams for full 

```{r}
check_model(politeness.full)
```
